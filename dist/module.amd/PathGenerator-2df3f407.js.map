{"version":3,"file":"PathGenerator-2df3f407.js","sources":["../../src/PathGenerator.ts"],"sourcesContent":["/**\r\n * @author Giuliano Collacchioni @2020\r\n */\r\n\r\nimport { pathToRegexp, Path, Key } from \"path-to-regexp\";\r\n\r\nconst LEADING_DELIMITER: RegExp = /^[\\\\\\/]+/;\r\nconst TRAILING_DELIMITER: RegExp = /[\\\\\\/]+$/;\r\nconst DELIMITER_NOT_IN_PARENTHESES: RegExp = /[\\\\\\/]+(?![^(]*[)])/g;\r\n\r\nexport function prepare(path: string): string {\r\n    return path.replace(LEADING_DELIMITER, \"\").replace(TRAILING_DELIMITER, \"\").replace(DELIMITER_NOT_IN_PARENTHESES, \"/\");\r\n}\r\nexport function generate(path: Path, keys?: Key[]): RegExp {\r\n    if (Array.isArray(path)) {\r\n        path.map(value => {\r\n            if (typeof value === \"string\") {\r\n                return prepare(value);\r\n            }\r\n            return value;\r\n        });\r\n    }\r\n    if (typeof path === \"string\") {\r\n        path = prepare(path);\r\n    }\r\n    return pathToRegexp(path, keys); // , { end: false }); // is this needed?\r\n}"],"names":["pathToRegexp"],"mappings":";;IAMA,IAAM,iBAAiB,GAAW,UAAU,CAAC;IAC7C,IAAM,kBAAkB,GAAW,UAAU,CAAC;IAC9C,IAAM,4BAA4B,GAAW,sBAAsB,CAAC;aAEpD,OAAO,CAAC,IAAY;QAChC,OAAO,IAAI,CAAC,OAAO,CAAC,iBAAiB,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC,OAAO,CAAC,4BAA4B,EAAE,GAAG,CAAC,CAAC;IAC1H,CAAC;aACe,QAAQ,CAAC,IAAU,EAAE,IAAY;QAC7C,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACrB,IAAI,CAAC,GAAG,CAAC,UAAA,KAAK;gBACV,IAAI,OAAO,KAAK,KAAK,QAAQ,EAAE;oBAC3B,OAAO,OAAO,CAAC,KAAK,CAAC,CAAC;iBACzB;gBACD,OAAO,KAAK,CAAC;aAChB,CAAC,CAAC;SACN;QACD,IAAI,OAAO,IAAI,KAAK,QAAQ,EAAE;YAC1B,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;SACxB;QACD,OAAOA,kBAAY,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;IACpC;;;;;;;;;;;;;;;;"}